{"version":3,"file":"static/js/626.2e2df34f.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactCard/ContactCard.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/Modal/Modal.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilterContacts = createSelector(\n    [selectContacts, selectFilterValue],\n    (contacts, filterValue) => {\n        const normalizedFilterValue = filterValue.toLowerCase();\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilterValue)\n        )\n    }\n);\n\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport avatar from './avatar.png';\n\nconst ContactCard = ({contact: { id, name, number }}) => {\n    const dispatch = useDispatch();\n\n    const handleDeleteContact = (contactId) => {\n        dispatch(deleteContact(contactId))\n    }\n\n    return (\n        <div>\n            <Card sx={{ width: 180 }}>\n                <CardActionArea >\n                    <CardMedia\n                        component=\"img\"\n                        height=\"70\"\n                        image={avatar}\n                        alt=\"avatar\"\n                    />\n                    <CardContent sx={{ padding: \"5px\" }}>\n                        <Typography gutterBottom variant=\"h5\" component=\"div\" sx={{ marginBottom: \"5px\", fontSize: 17 }}>\n                            {name}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                            {number}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions sx={{ padding: \"5px\" }}>\n                    <Button\n                        size=\"small\"\n                        color=\"primary\"       \n                        onClick={() => (handleDeleteContact(id))}\n                    >\n                        Delete\n                    </Button>\n                </CardActions>\n            </Card>\n        </div>\n    )\n};\n\nexport default ContactCard;","import { useSelector } from 'react-redux';\nimport { selectFilterContacts } from 'redux/contacts/selectors';\nimport ContactCard from 'components/ContactCard/ContactCard';\nimport './ContactList.css';\n\nconst ContactList = () => {\n    const filterContacts = useSelector(selectFilterContacts);\n\n    return (\n        <ul className=\"Contacts__list\">\n            {filterContacts.length === 0\n                ? <p>You havn't had the contacts yet. Please, add a contact</p>\n                : filterContacts.map(contact => {\n                    return (\n                        <li key={contact.id} className=\"Contacts__item\">\n                            <ContactCard contact={contact} />\n                        </li>\n                    )\n                }) \n            }\n        </ul>        \n    )\n}\n\nexport default ContactList;","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilterValue } from 'redux/contacts/selectors';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport './Filter.css';\n\nconst Filter = () => {\n    const filterValue = useSelector(selectFilterValue);\n    const dispatch = useDispatch();\n    \n    const handleChangeFilter = (evt) => {\n        dispatch(setFilter(evt.target.value))\n    };\n\n    return (\n        <div>\n            <p className='Filter__title'>Find contacts by name:</p>\n            <Box\n                component=\"form\"\n                sx={{\n                    '& > :not(style)': { m: 1, width: '25ch' },\n                }}\n                noValidate\n                autoComplete=\"off\"\n            >                        \n                <TextField\n                    id=\"outlined-basic\"\n                    label=\"Name\"\n                    variant=\"outlined\"\n                    value={filterValue}\n                    onChange={handleChangeFilter}\n                    style={{ margin: 0, }}\n                    size=\"small\"\n                />\n            </Box>\n        </div>\n    )\n};\n\nexport default Filter;\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from \"redux/contacts/selectors\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { Button } from \"@mui/material\";\nimport { HiPlus } from \"react-icons/hi\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nconst ContactForm = ({ handleCloseModal }) => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('')\n    const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    const handleSubmitForm = (evt) => {\n        evt.preventDefault();\n\n        if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n            alert(`${name} is already in contacts`)\n        } else {\n            dispatch(addContact({ name, number }));\n        };\n\n        reset();\n        handleCloseModal();\n    }\n\n    const handleChange = (evt) => {\n        const { name, value } = evt.target;\n        \n        switch (name) {\n            case 'name':\n                setName(value)\n                break;\n            \n            case 'number':\n                setNumber(value)\n                break;\n            \n            default:\n                return;\n        }\n    }\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    }\n\n    return (\n        <Box\n            component=\"form\"\n            autoComplete=\"off\"\n            onSubmit={handleSubmitForm}\n        >\n            <TextField\n                id=\"outlined-basic\"\n                label=\"Name\"\n                variant=\"outlined\"\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n                onChange={handleChange}                \n                size=\"small\"\n                fullWidth\n                margin=\"normal\"\n            />\n            <TextField\n                id=\"outlined-basic\"\n                label=\"Phone number\"\n                variant=\"outlined\"\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                value={number}\n                onChange={handleChange}                \n                size=\"small\"\n                fullWidth\n                margin=\"normal\"\n                style={{  borderColor: '#1976d2' }}\n            />  \n            <Button\n                variant=\"contained\"\n                type=\"submit\"\n                startIcon={<HiPlus aria-label=\"plus\" size=\"30\" />}\n                style={{ marginTop: 15, fontSize: 18 }}\n            >\n                Add\n            </Button>\n        </Box>\n    )\n};\n\nexport default ContactForm;","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: 'none',\n  borderRadius: '10.3108px',\n  boxShadow: 24,\n  p: 4,\n};\n\nconst ModalAddContact = ({openModal, handleCloseModal}) => {\n  return (\n    <div>\n      <Modal\n        open={openModal}\n        onClose={handleCloseModal}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography style={{ fontSize: 22, color: \"#1976d2\" }} id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Add contact:\n          </Typography>\n          <ContactForm id=\"modal-modal-description\" handleCloseModal={handleCloseModal} />\n        </Box>\n      </Modal>\n    </div>\n  );\n}\n\nexport default ModalAddContact;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Button } from '@mui/material';\nimport { HiPlus } from 'react-icons/hi';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport Loader from 'components/Loader/Loader';\nimport ModalAddContact from 'components/Modal/Modal';\nimport './Contacts.css';\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const [openModal, setOpenModal] = useState(false);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const handleOpenModal = () => setOpenModal(true);\n    const handleCloseModal = () => setOpenModal(false);\n\n    return (\n        <div className='Contacts Main_container'>\n            <div className='Contacts__wrapper'>\n                <h1 className='Contacts__title'>Contacts</h1>\n                <Button\n                    variant=\"contained\"\n                    type=\"submit\"\n                    startIcon={<HiPlus aria-label=\"plus\" size=\"30\" />}\n                    style={{ marginLeft: \"auto\", fontSize: 18 }}\n                    onClick={handleOpenModal}\n                >\n                    Add contact\n                </Button>\n                <ModalAddContact openModal={openModal} handleCloseModal={handleCloseModal} />\n            </div>\n            <Filter />\n            {isLoading && !error && <Loader />}\n            <ContactList />\n        </div>\n    )\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilterValue","filter","selectFilterContacts","createSelector","filterValue","normalizedFilterValue","toLowerCase","contact","name","includes","id","number","dispatch","useDispatch","Card","sx","width","CardActionArea","CardMedia","component","height","image","avatar","alt","CardContent","padding","Typography","gutterBottom","variant","marginBottom","fontSize","color","CardActions","Button","size","onClick","contactId","deleteContact","filterContacts","useSelector","className","length","map","Box","m","noValidate","autoComplete","TextField","label","value","onChange","evt","setFilter","target","style","margin","handleCloseModal","useState","setName","setNumber","handleChange","reset","onSubmit","preventDefault","find","alert","addContact","type","pattern","title","required","fullWidth","borderColor","startIcon","marginTop","position","top","left","transform","bgcolor","border","borderRadius","boxShadow","p","openModal","Modal","open","onClose","setOpenModal","useEffect","fetchContacts","marginLeft","Loader"],"sourceRoot":""}